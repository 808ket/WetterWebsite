<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link
            rel="stylesheet"
            href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
    />
    <link
            rel="stylesheet"
            href="../css/style.css"
    />
    <link
            rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css"
    >
    <title>WetterApp</title>
</head>
<body>
<div>
    <h1 class="heading">Wetter Daten</h1>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col">
            <div class="city-name-style">
                <h3 class="city-name" data-name="stadtname">Mein Standort</h3>
                <form>
                    <span id="cityOutput" class="city-output"></span>
                    <span class="city-temp">
                        <i class="bi-thermometer-half"></i>Temperatur in <sup>째C</sup>
                    </span>
                    <p id="temperatureOutput"></p>
                    <p id="humidityOutput"></p>
                    <p id="windspeedOutput"></p>
                </form>
                <div class="weather-city-situation">
                    <h4 class="city-title-weather-situation" id="descriptionOutput"></h4>
                    <img id="weatherIcon" />
                </div>
            </div>
        </div>
        <div class="col">
            <form onsubmit="event.preventDefault(); getWeather(document.getElementById('cityInput').value);">
                <input style="outline: none; border: 2px solid green;" id="cityInput" type="text" placeholder="Stadt eingeben..." autofocus>
                <button type="submit">SUCHE</button>
            </form>
        </div>
        <div class="w-100"></div>
        <div class="col">
            <div class="wanted-city-name-style">
                <h3 class="wanted-city-name" data-name="gesuchte_stadtname">Gesuchte Stadt</h3>
                <form>
                    <span id="askedCityOutput" class="city-output"></span>
                    <span class="wanted-city-temp">
                        <i class="bi-thermometer-half"></i><sup>째C</sup>
                    </span>
                    <p id="askedTemperatureOutput"></p>
                    <p id="askedHumidityOutput"></p>
                    <p id="askedWindspeedOutput"></p>
                </form>
                <div class="weather-city-situation">
                    <h4 class="city-title-weather-situation" id="askedDescriptionOutput"></h4>
                    <img id="askedWeatherIcon" />
                </div>
            </div>
        </div>

        <div class="col">
            <div id="e6k8hv4n"></div>
            <script language="JavaScript" type="text/javascript">
                function loadMapz() {
                    var myMapz = document.createElement("iframe");
                    myMapz.setAttribute("src", "http://www.mapz.com/embedded/map/e6k8hv4n?lon=6.955443432150475&lat=50.91923397843401518&zoom=16");
                    myMapz.style.width = "450px";
                    myMapz.style.height = "450px";
                    var element = document.getElementById('e6k8hv4n')
                    element.appendChild(myMapz); }
                loadMapz()
            </script>
        </div>
    </div>
</div>
<script language="JavaScript" type="text/javascript">
    async function getWeather(city = null) {
        const apiKey = 'a1e5d59fc6cd95597863a081482de30e';
        let apiUrl;
        if (city) {
            apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric&lang=de`;
        } else {
            const position = await getPosition();
            const { latitude, longitude } = position.coords;
            apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric&lang=de`;
        }

        try {
            const response = await fetch(apiUrl);
            if (!response.ok) {
                throw new Error('Netzwerkantwort war nicht ok ' + response.statusText);
            }
            const weatherData = await response.json();
            if (city) {
                displayAskedCity(weatherData);
                displayAskedTemperature(weatherData);
                displayAskedDescription(weatherData);
                displayAskedHumidity(weatherData);
                displayAskedWindspeed(weatherData);
            } else {
                displayCity(weatherData);
                displayTemperature(weatherData);
                displayDescription(weatherData);
                displayHumidity(weatherData);
                displayWindspeed(weatherData);
            }
        } catch (error) {
            console.error('Es gab ein Problem mit der Fetch-Operation:', error);
            document.getElementById('weatherOutput').textContent = 'Fehler: ' + error.message;
        }
    }

    function displayTemperature(data) {
        const temperatureOutput = document.getElementById('temperatureOutput');
        const temperature = data.main.temp;
        temperatureOutput.textContent = `Temperatur: ${temperature}째C`;
    }

    function displayDescription(data) {
        const descriptionOutput = document.getElementById('descriptionOutput');
        const description = data.weather[0].description;
        descriptionOutput.textContent = `Wetter: ${description}`;
    }

    function displayHumidity(data) {
        const humidityOutput = document.getElementById('humidityOutput');
        const humidity = data.main.humidity;
        humidityOutput.textContent = `Luftfeuchtigkeit: ${humidity}%`;
    }

    function displayWindspeed(data) {
        const windspeedOutput = document.getElementById('windspeedOutput');
        const windspeed = data.wind.speed;
        windspeedOutput.textContent = `Windgeschwindigkeit: ${windspeed} m/s`;
    }

    function displayCity(data) {
        const cityOutput = document.getElementById('cityOutput');
        cityOutput.textContent = `Ort: ${data.name}`;
    }

    function displayAskedTemperature(data) {
        const askedTemperatureOutput = document.getElementById('askedTemperatureOutput');
        const temperature = data.main.temp;
        askedTemperatureOutput.textContent = `Temperatur: ${temperature}째C`;
    }

    function displayAskedDescription(data) {
        const askedDescriptionOutput = document.getElementById('askedDescriptionOutput');
        const description = data.weather[0].description;
        askedDescriptionOutput.textContent = `Wetter: ${description}`;
    }

    function displayAskedHumidity(data) {
        const askedHumidityOutput = document.getElementById('askedHumidityOutput');
        const humidity = data.main.humidity;
        askedHumidityOutput.textContent = `Luftfeuchtigkeit: ${humidity}%`;
    }

    function displayAskedWindspeed(data) {
        const askedWindspeedOutput = document.getElementById('askedWindspeedOutput');
        const windspeed = data.wind.speed;
        askedWindspeedOutput.textContent = `Windgeschwindigkeit: ${windspeed} m/s`;
    }

    function displayAskedCity(data) {
        const askedCityOutput = document.getElementById('askedCityOutput');
        askedCityOutput.textContent = `gesuchte Stadt: ${data.name}`;
    }

    function getPosition() {
        return new Promise((resolve, reject) => {
            navigator.geolocation.getCurrentPosition(resolve, reject);
        });
    }

    // Automatically get weather for current location on page load
    document.addEventListener('DOMContentLoaded', () => {
        getWeather();
    });
</script>
</body>
</html>
